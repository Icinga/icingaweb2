<?php
use Icinga\Module\Monitoring\Object\Host;
use Icinga\Module\Monitoring\Object\Service;

if (! $this->compact): ?>
<div class="controls">
  <?= $this->tabs; ?>
    <div class="dontprint">
        <?= $this->render('list/components/selectioninfo.phtml'); ?>
    </div>
    <h1><?= count($downtimes) ?> <?= $this->translate('Downtimes') ?></h1>
  <?= $this->sortBox; ?>
  <?= $this->limiter; ?>
  <?= $this->paginator; ?>
  <?= $this->filterEditor; ?>
</div>
<?php endif ?>
<div class="content">
<?php

if (count($downtimes) === 0) {
    echo $this->translate('No downtimes found matching the filter,'
            . ' maybe the downtime already expired.') . '</div>';
    return;
}
?>
  <table data-base-target="_next"
         class="action multiselect"
         data-icinga-multiselect-url="/icingaweb2/monitoring/downtimes/show"
         data-icinga-multiselect-data="downtime_id">
    <tbody>
    <?php foreach ($downtimes as $downtime): ?>
    <?php
      if (isset($downtime->service_description)) {
          $isService = true;
          $stateName = Service::getStateText($downtime->service_state);
      } else {
          $isService = false;
          $stateName = Host::getStateText($downtime->host_state);
      }
    ?>
      <tr class="state <?= $stateName; ?><?= $downtime->is_in_effect ? ' handled' : ''; ?>">
        <td class="state">
          <strong><?= $downtime->is_in_effect ? $this->translate('Expires') : $this->translate('Starts'); ?></strong>
          <br>
          <?= $this->timeUntil($downtime->is_in_effect ? $downtime->end : $downtime->start, $this->compact) ?>
        </td>
        <td>
        <?php if ($isService): ?>
          <?= $this->icon('service', $this->translate('Service')); ?> <?= $this->qlink(
            $this->escape($downtime->host_display_name) . ': ' . $this->escape($downtime->service_display_name),
            'monitoring/downtime/show',
            array('downtime_id' => $downtime->id),
            array(
              'title' => sprintf(
                $this->translate('Show detailed information for this downtime scheduled for service %s on host %s'),
                $downtime->service_display_name,
                $downtime->host_display_name
              ),
              'class' => 'rowaction'
            )
          ); ?>
        <?php else: ?>
          <?= $this->icon('host', $this->translate('host')); ?> <?= $this->qlink(
            $this->escape($downtime->host_display_name),
            'monitoring/downtime/show',
            array('downtime_id' => $downtime->id),
            array(
              'title' => sprintf(
                $this->translate('Show detailed information for this downtime scheduled for host %s'),
                $downtime->host_display_name
              ),
              'class' => 'rowaction'
            )
          ); ?>
        <?php endif ?>
          <br>
          <?= $this->icon('comment', $this->translate('Comment')); ?> [<?= $this->escape($downtime->author_name) ?>] <?= $this->escape($downtime->comment) ?>
          <br>
          <small>
        <?php if ($downtime->is_flexible): ?>
          <?php if ($downtime->is_in_effect): ?>
            <?= sprintf(
              $isService
                ? $this->translate('This flexible service downtime was started on %s at %s and lasts for %s until %s at %s.')
                : $this->translate('This flexible host downtime was started on %s at %s and lasts for %s until %s at %s.'),
                $this->formatDate($downtime->start),
                $this->formatTime($downtime->start),
                $this->formatDuration($downtime->duration),
                $this->formatDate($downtime->end),
                $this->formatTime($downtime->end)
            ); ?>
          <?php else: ?>
            <?= sprintf(
              $isService
                ? $this->translate('This flexible service downtime has been scheduled to start between %s - %s and to last for %s.')
                : $this->translate('This flexible host downtime has been scheduled to start between %s - %s and to last for %s.'),
                $this->formatDateTime($downtime->scheduled_start),
                $this->formatDateTime($downtime->scheduled_end),
                $this->formatDuration($downtime->duration)
            ); ?>
          <?php endif ?>
        <?php else: ?>
          <?php if ($downtime->is_in_effect): ?>
            <?= sprintf(
              $isService
                ? $this->translate('This fixed service downtime was started on %s at %s and expires on %s at %s.')
                : $this->translate('This fixed host downtime was started on %s at %s and expires on %s at %s.'),
                $this->formatDate($downtime->start),
                $this->formatTime($downtime->start),
                $this->formatDate($downtime->end),
                $this->formatTime($downtime->end)
            ); ?>
          <?php else: ?>
            <?= sprintf(
              $isService
                ? $this->translate('This fixed service downtime has been scheduled to start on %s at %s and to end on %s at %s.')
                : $this->translate('This fixed host downtime has been scheduled to start on %s at %s and to end on %s at %s.'),
                $this->formatDate($downtime->start),
                $this->formatTime($downtime->start),
                $this->formatDate($downtime->end),
                $this->formatTime($downtime->end)
            ); ?>
          <?php endif ?>
        <?php endif ?>
          </small>
        </td>
        <?php if (isset($delDowntimeForm)): // Form is unset if the current user lacks the respective permission ?>
        <td style="width: 2em" data-base-target="self">
          <?php
          $delDowntimeForm = clone $delDowntimeForm;
          $delDowntimeForm->populate(
              array(
                  'downtime_id' => $downtime->id,
                  'downtime_is_service' => isset($downtime->service_description)
              )
          );
          echo $delDowntimeForm;
          ?>
        </td>
        <?php endif ?>
      </tr>
<?php endforeach ?>
    </tbody>
  </table>
</div>
