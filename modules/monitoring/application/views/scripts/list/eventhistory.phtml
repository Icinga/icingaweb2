<?php
use Icinga\Module\Monitoring\Object\Host;
use Icinga\Module\Monitoring\Object\Service;

if (! $this->compact): ?>
<div class="controls">
  <?= $this->tabs; ?>
  <?= $this->sortBox; ?>
  <?= $this->limiter; ?>
  <?= $this->paginator; ?>
  <?= $this->filterEditor; ?>
</div>
<?php endif ?>
<div class="content">
<?php
if (count($history) === 0) {
    echo $this->translate('No history events found matching the filter') . '</div>';
    return;
}
?>
  <table data-base-target="_next" class="action">
    <tbody>
    <?php foreach ($history as $event): ?>
    <?php
      $icon = 'help';
      $msg = $event->output;
      $title = $event->type;
      $stateName = 'invalid';
      $isService = isset($event->service_description);
      switch ($event->type) {
        case 'notify':
          $icon = 'bell';
          $title = $this->translate('Notification');
          $msg = $msg ?: $this->translate('This notification was not sent out to any contact.');
          break;
        case 'comment':
          $icon = 'comment';
          $title = $this->translate('Comment');
          break;
        case 'ack':
          $icon = 'ok';
          $title = $this->translate('Acknowledgement');
          break;
        case 'dt_comment':
          $icon = 'plug';
          $title = $this->translate('In Downtime');
          break;
        case 'flapping':
          $icon = 'flapping';
          $title = $this->translate('Flapping');
          break;
        case 'flapping_deleted':
          $icon = 'ok';
          $title = $this->translate('Flapping Stopped');
          break;
        case 'hard_state':
          $icon = $isService ? 'service' : 'host';
          $stateName = $isService ? Service::getStateText($event->state) : Host::getStateText($event->state);
          $title = $isService ? Service::getStateText($event->state, true) : Host::getStateText($event->state, true);
          break;
        case 'soft_state':
          $icon = 'lightbulb';
          $stateName = $isService ? Service::getStateText($event->state) : Host::getStateText($event->state);
          $title = $isService ? Service::getStateText($event->state, true) : Host::getStateText($event->state, true);
          break;
        case 'dt_start':
          $icon = 'starttime';
          $title = $this->translate('Downtime Start');
          break;
        case 'dt_end':
          $icon = 'endtime';
          $title = $this->translate('Downtime End');
          break;
        }
      ?>
      <tr class="state <?= $stateName; ?>">
        <td class="state">
          <strong><?= $this->escape($title); ?></strong>
          <br>
          <?= $this->timeAgo($event->timestamp, $this->compact); ?>
        </td>
        <td>
        <?php if ($isService): ?>
          <?= $this->link()->service(
              $event->service_description, $event->service_display_name, $event->host_name, $event->host_display_name, 'rowaction'
          ) ?>
        <?php else: ?>
          <?= $this->link()->host($event->host_name, $event->host_display_name) ?>
        <?php endif ?>
          <br>
          <div>
            <?= $this->icon($icon, $title); ?> <?= empty($msg) ? '' : $this->escape($msg) ?>
          </div>
        </td>
      </tr>
    <?php endforeach ?>
    </tbody>
  </table>
</div>
