<?php
use Icinga\Module\Monitoring\Object\Host;
use Icinga\Module\Monitoring\Object\Service;
use Icinga\Web\UrlParams;
/** @var \Icinga\Module\Monitoring\Object\MonitoredObject $object */
?>
<table class="state-table service-detail-state">
    <tr>
        <td class="state-col state-<?= Host::getStateText($object->host_state) ?><?= $object->host_handled ? ' handled' : '' ?>">
            <div class="state-label"><?= Host::getStateText($object->host_state, true) ?></div>
            <div class="state-meta">
                <?= $this->timeSince($object->host_last_state_change) ?>
            <?php if ((int) $object->host_state > 0 && (int) $object->host_state_type === 0): ?>
                <div><?= $this->translate('Soft', 'Soft state') ?> <?= $object->host_attempt ?></div>
            <?php endif ?>
            </div>
        </td>
        <td>
            <?= $this->iconImage()->host($object) ?>
            <span class="selectable"><?= $this->escape($object->host_display_name) ?></span>
        <?php if ($object->host_display_name !== $object->host_name): ?>
            <span class="selectable host-meta">&#40;<?= $this->escape($object->host_name) ?>&#41;</span>
        <?php endif ?>
            <?= $this->hostFlags($object) ?>
        <?php if ($object->host_address6 && $object->host_address6 !== $object->host_name): ?>
            <div class="selectable host-meta" title="<?= $this->translate('IPv6 address') ?>">
                <?= $this->escape($object->host_address6) ?>
            </div>
        <?php endif ?>
        <?php if ($object->host_address && $object->host_address !== $object->host_name): ?>
            <div class="selectable host-meta" title="<?= $this->translate('IPv4 address') ?>">
                <?= $this->escape($object->host_address) ?>
            </div>
        <?php endif ?>
        </td>
    </tr>
    <tr>
        <td class="state-col state-<?= Service::getStateText($object->service_state) ?><?= $object->service_handled ? ' handled' : '' ?>">
            <div class="state-label"><?= Service::getStateText($object->service_state, true) ?></div>
            <div class="state-meta">
                <?= $this->timeSince($object->service_last_state_change) ?>
            <?php if ((int) $object->service_state > 0 && (int) $object->service_state_type === 0): ?>
                <div><?= $this->translate('Soft', 'Soft state') ?> <?= $object->service_attempt ?></div>
            <?php endif ?>
            </div>
        </td>
        <td>
            <?= $this->iconImage()->service($object) ?>
            <?= $this->translate('Service') ?>&#58; <span class="selectable"><?= $this->escape($object->service_display_name) ?></span>
            <?php if ($object->service_display_name !== $object->service_description): ?>
                <span class="selectable service-meta">&#40;<?= $this->escape($object->service_description) ?>&#41;</span>
            <?php endif ?>
            <?= $this->serviceFlags($object) ?>
        </td>
    </tr>
</table>
<div class="quick-actions">
    <ul class="nav tab-nav">
        <li><?php
            $hideDowntimes = (bool) $this->url()->getParam('hideDowntimes', 0);
            if ($hideDowntimes == 1) {
                echo $this->qlink(
                    $this->translate('Show Downtimes'),
                    'monitoring/service/history',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'plug',
                        'title'             => $this->translate(
                            'Include downtime start and end event records'
                        )
                    )
                );
            } else {
                echo $this->qlink(
                    $this->translate('Hide Downtimes'),
                    'monitoring/service/history',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName(), 'hideDowntimes' => 1),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'plug',
                        'title'             => $this->translate(
                            'Hide downtime start and end event records'
                        )
                    )
                );
            } ?>
        </li>
    </ul>
</div>
